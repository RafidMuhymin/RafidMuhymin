<style lang="scss">
  h1 {
    background-image: linear-gradient(45deg, #f3a135 0%, #fdb530 100%);
    background-clip: text;
    color: transparent;
  }

  nav {
    padding: 0.5rem;
  }

  a:not([download]) {
    @apply px-2;
    background-image: linear-gradient(-45deg, #f37335 0%, #fdc830 100%);
    background-repeat: no-repeat;
    background-position: bottom center;
    background-size: 0% 10%;
    transition: background-size 0.15s ease-in-out;

    &:hover {
      text-decoration-line: none;
      background-size: 100% 10%;
    }
  }

  a {
    @apply py-[0.375rem];
  }

  @media screen and (max-width: 639px) {
    nav {
      visibility: hidden;
    }

    nav * {
      width: 0;
      height: 0;
      left: -100%;
      position: relative;
    }

    input:checked {
      ~ header {
        height: 100dvh;

        > div label {
          gap: 0;

          div {
            &:first-of-type {
              margin-bottom: -0.25rem;
              transform: rotate(45deg);
            }

            &:last-of-type {
              transform: rotate(-45deg);
            }
          }
        }

        nav {
          width: 100%;
          display: flex;
          visibility: visible;

        nav * {
          left: 0;
          width: auto;
          height: auto;
        }
      }
    }
  }
</style>

<input tabindex={-1} type="checkbox" id="menu-button" class="hidden" />

<header
  class="bg-yellow-100 text-center px-6 pt-3 gap-0 sm:gap-4 flex sm:block lg:flex flex-col sm:flex-row sm:justify-between items-center"
>
  <div
    class="gap-2 w-full sm:w-auto flex justify-between sm:justify-center lg:justify-between items-center"
  >
    <h1 role="presentation">Rafid Muhymin Wafi</h1>

    <label
      tabindex={0}
      for="menu-button"
      class="p-2 gap-2 flex flex-col sm:hidden hover:cursor-pointer select-none"
      onkeyup="event.key === 'Enter' && this.click()"
      onmousedown="event.preventDefault()"
    >
      <div class="w-8 h-1 bg-black transition-all"></div>
      <div class="w-8 h-1 bg-black transition-all"></div>
    </label>
  </div>

  <nav
    class="h-0 sm:h-auto gap-3 overflow-hidden items-center flex justify-evenly flex-col sm:flex-row flex-grow lg:flex-grow-0"
  >
    <a href="/">Home</a>
    <a href="https://softhardsystem.com/">Blog</a>
    <a href="/#about">About</a>
    <a href="/projects">Projects</a>
    <a href="/#contact">Contact</a>
    <a
      download
      href="https://docs.google.com/document/d/1zzNVh0iKdT95gwZgllYt9yUOXJJUWKmxXzT771TAFkc/export?format=pdf"
      class="bg-blue-500 hover:bg-blue-600 hover:no-underline transition-colors text-white px-4 rounded-md"
    >
      Download Resume
    </a>
  </nav>
</header>

<svg class="-mt-4 -z-10 relative" viewBox="0 0 976 56.4">
  <path d="M976 42C544 87 380 6 0 55L1 0h975Z" fill="#fef9c3"></path>
</svg>

<script>
  const menuButton = document.querySelector("#menu-button");

  window.matchMedia("(min-width : 640px)").onchange = ({ matches }) => {
    if (matches) {
      document.body.style.overflow = "auto";
    } else if (menuButton.checked) {
      document.body.style.overflowY = "hidden";
    }
  };

  menuButton.onclick = ({ target }) => {
    const navlinks = target.nextElementSibling.querySelectorAll("nav *");

    if (target.checked && window.innerWidth < 640) {
      document.body.style.overflow = "hidden";

      navlinks.forEach((link, index) => {
        link.animate({ left: ["-100%", 0] }, 200 + index * 100);
      });
    } else {
      target.checked = true;

      navlinks.forEach((link, index) => {
        const animationDuration = 500,
          leftStartPosition = "0%",
          leftEndPosition = `-${(navlinks.length - index) * 100}%`;

        const animation = link.animate(
          { left: [leftStartPosition, leftEndPosition] },
          animationDuration
        );

        if (index === navlinks.length - 1) {
          animation.onfinish = () => {
            target.checked = false;
            document.body.style.overflow = "auto";
          };
        }
      });
    }
  };
</script>
