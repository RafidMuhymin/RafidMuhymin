<style is:global lang="scss">
  #contact-form {
    label:not(input) {
      @apply font-semibold;
    }

    .error,
    .success {
      @apply font-bold text-lg text-center;
    }

    .error {
      @apply text-red-600;
    }

    .success {
      @apply text-green-500;
    }

    button > span {
      &:first-of-type.hidden + span {
        display: flex;
      }

      &:last-of-type svg {
        @apply mx-auto animate-spin;
      }
    }
  }
</style>

<section class="px-8 pt-8 pb-12 bg-slate-900 text-gray-50">
  <div class="max-w-[640px] mx-auto">
    <div class="mb-8 text-center">
      <h2 class="text-red-500">Contact Me</h2>
      <p class="text-xl italic">
        Have any interesting idea? Let's work together!
      </p>
    </div>

    <form id="contact-form" class="gap-4 flex flex-col text-gray-300">
      <label class="gap-2 flex flex-col">
        Enter Your Full Name
        <input type="text" name="name" required />
      </label>

      <label class="gap-2 flex flex-col">
        Enter Your Email Address
        <input type="email" name="email" required />
      </label>

      <label class="gap-2 flex flex-col">
        Enter Your Message or Question
        <textarea name="message" required></textarea>
      </label>

      <button type="submit" class="mt-2 mx-auto btn">
        <span>Send Message <i class="iconify" data-icon="bi:send"></i></span>

        <span class="hidden w-[8.75rem] text-center text-4xl -my-[0.125rem]"
          ><i class="iconify" data-icon="ei:spinner-3"></i>
          <span class="sr-only">Sending...</span>
        </span>
      </button>
    </form>
  </div>
</section>

<script>
  const insertAdjacentHTML = (submitter, html) => {
    submitter.insertAdjacentHTML("afterend", html);

    setTimeout(() => {
      submitter.nextElementSibling?.remove();
    }, 3000);
  };

  document
    .querySelector("#contact-form")
    .addEventListener("submit", (event) => {
      event.preventDefault();

      const { submitter } = event;

      if (submitter.nextElementSibling) {
        submitter.nextElementSibling.remove();
      }

      const { classList: buttonTextClassList } = submitter.firstElementChild;

      buttonTextClassList.add("hidden");

      const formdata = new FormData(event.target);

      fetch("/api/contact", {
        method: "POST",
        body: formdata,
      })
        .then((res) => res.text())
        .then((res) => {
          if (res === "OK") {
            insertAdjacentHTML(
              submitter,
              `<p class="success">Successfully sent the message!</p>`
            );

            event.target.reset();
          } else {
            insertAdjacentHTML(
              submitter,
              `<p class="error">An error occured! Couldn't send the message!</p>`
            );
          }
        })
        .catch((error) => {
          insertAdjacentHTML(
            submitter,
            `<p class="error">An error occured! ${error.message}!</p>`
          );
        })
        .finally(() => {
          buttonTextClassList.remove("hidden");
        });
    });
</script>
