---
import projectsTitles from "../data/projects-titles.json";

export interface Props {
  limit?: number;
}

const { limit } = Astro.props as Props;

const projects = await Astro.glob("../pages/projects/*.md");

const requiredProjectsTitles = projectsTitles.slice(0, limit);

const requiredProjects = projects.filter((project) =>
  requiredProjectsTitles.includes(project.frontmatter.title)
);
---

<style lang="scss">
  .project {
    > div {
      a:first-child {
        @apply underline-offset-[0.3125rem];
      }

      .stacks {
        overflow: hidden;
        display: -webkit-box;
        text-overflow: ellipsis;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 3;

        &:hover {
          overflow: visible;
          -webkit-line-clamp: 1000;
        }
      }

      .links a {
        @apply flex text-3xl hover:no-underline;
      }
    }
  }
</style>

<section id="projects">
  <div class="max-w-[1200px] mx-auto p-8">
    <h2 class="text-center text-rose-600">
      <span>Projects I have Worked On</span>
    </h2>

    <div class="flex flex-col justify-center">
      {requiredProjects.map(async (project) => {
        const {
          title,
          description,
          screenshot_filename,
          logo_filename,
          npm_package,
          live_demo,
          github_repo,
          stacks,
        } = project.frontmatter

        const { default: src } = await (screenshot_filename
          ? import(`../images/${screenshot_filename}.png`)
          : logo_filename
          ? import(`../images/${logo_filename}.svg`)
          : {})

        const { url: projectURL } = project

        return (
          <div class="project p-8 gap-6 flex flex-col md:flex-row justify-center items-center">
            <a href={projectURL} class="md:w-[37.5%]">
              <img
                src={src}
                alt={title}
                class:list={[
                  "rounded-lg drop-shadow-2xl",
                  { "bg-slate-900 p-8": !!logo_filename },
                ]}
              />
            </a>

            <div class="grid p-4 md:w-[62.5%]">
              <a href={projectURL}>
                <h3 class="text-blue-600">{title}</h3>
              </a>

              <p>{description}</p>

              {stacks && (
                <p class="stacks text-teal-700">
                  <strong class="text-rose-600">#stacks: </strong>
                  {stacks
                    ?.map(
                      (stack) => `#${stack.replace("\\@", "@").toLowerCase()}`
                    )
                    .map((stack) => (
                      <a
                        class="text-teal-700 hover:text-teal-600 transition-colors"
                        href={`https://npmjs.com/packages/${stack}`}
                      >
                        {stack}{" "}
                      </a>
                    ))}
                </p>
              )}

              <div class="links my-4 gap-3 flex justify-end items-center">
                <a
                  href={npm_package || live_demo}
                  title={`${title} ${live_demo ? "Live Demo" : "NPM Package"}`}
                >
                  <i
                    class="iconify"
                    data-icon={
                      logo_filename ? "logos:npm-icon" : "bx:link-external"
                    }
                    data-width={!logo_filename && "2.375rem"}
                  />
                </a>

                {() => {
                  if (typeof github_repo === "string") {
                    return (
                      <a
                        href={github_repo}
                        title={`${title} GitHub Repository`}
                      >
                        <i class="iconify" data-icon="logos:github-icon" />
                      </a>
                    )
                  }

                  return (
                    <Fragment>
                      <a
                        href={github_repo.client_side}
                        title={`${title} GitHub Repository`}
                      >
                        <i class="iconify" data-icon="logos:github-icon" />
                      </a>

                      <a
                        href={github_repo.server_side}
                        title={`${title} GitHub Repository`}
                      >
                        <i class="iconify" data-icon="logos:github-icon" />
                      </a>
                    </Fragment>
                  )
                }}
              </div>
            </div>
          </div>
        )
      })}
    </div>
  </div>
</section>
